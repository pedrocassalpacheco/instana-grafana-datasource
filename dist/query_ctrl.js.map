{"version":3,"sources":["../src/query_ctrl.js"],"names":["QueryType","QueryCtrl","_","OpenNMSQueryCtrl","$rootScope","$scope","$injector","$q","$modal","types","error","validateTarget","self","showSelectionModal","query","datasource","searchForNodes","then","results","data","count","totalCount","node","isUndefined","foreignId","isNull","foreignSource","target","nodeId","id","targetBlur","filterResources","resources","filteredResources","length","toLowerCase","filter","resource","key","indexOf","take","searchLimit","nodeResources","undefined","deferred","defer","resolve","promise","getResourcesWithAttributesForNode","each","label","name","sortBy","re","match","exec","resourceId","suggestAttributes","attributes","namedAttributes","attribute","push","getAvailableFilters","columns","search","callback","scope","$new","result","modal","template","persist","show","keyboard","when","modalEl","refresh","type","Attribute","Expression","expression","Filter","templateUrl"],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import './modal_ctrl';\nimport {QueryType} from './constants';\nimport {QueryCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\n\nexport class OpenNMSQueryCtrl extends QueryCtrl {\n\n  constructor($rootScope, $scope, $injector, $q, $modal) {\n    super($scope, $injector);\n\n    this.types = QueryType;\n\n    this.error = this.validateTarget();\n    this.$rootScope = $rootScope;\n    this.$q = $q;\n    this.$modal = $modal;\n  }\n\n  openNodeSelectionModal() {\n    var self = this;\n    this.showSelectionModal(\"nodes\", {\n      '#': 'id',\n      'Label': 'label',\n      'Foreign ID': 'foreignId',\n      'sysName': 'sysName'\n    }, function (query) {\n      return self.datasource\n        .searchForNodes(query)\n        .then(function (results) {\n          return {\n            'count': results.data.count,\n            'totalCount': results.data.totalCount,\n            'rows': results.data.node\n          };\n        });\n    }, function (node) {\n      if (!_.isUndefined(node.foreignId) && !_.isNull(node.foreignId)\n        && !_.isUndefined(node.foreignSource) && !_.isNull(node.foreignSource)) {\n        // Prefer fs:fid\n        self.target.nodeId = node.foreignSource + \":\" + node.foreignId;\n      } else {\n        // Fallback to node id\n        self.target.nodeId = node.id;\n      }\n      self.targetBlur();\n    });\n  }\n\n  openResourceSelectionModal() {\n    var self = this;\n\n    function filterResources(resources, query) {\n      var filteredResources = resources;\n      if (query.length >= 1) {\n        query = query.toLowerCase();\n        filteredResources = _.filter(resources, function (resource) {\n          return resource.key.indexOf(query) >= 0;\n        });\n      }\n\n      // Limit the results - it takes along time to render if there are too many\n      var totalCount = filteredResources.length;\n      filteredResources = _.take(filteredResources, self.datasource.searchLimit);\n\n      return {\n        'count': filteredResources.length,\n        'totalCount': totalCount,\n        'rows': filteredResources\n      };\n    }\n\n    self.nodeResources = undefined;\n    this.showSelectionModal(\"resources\", {\n      'Label': 'label',\n      'Name': 'name'\n    }, function (query) {\n      if (self.nodeResources !== undefined) {\n        var deferred = self.$q.defer();\n        deferred.resolve(filterResources(self.nodeResources, query));\n        return deferred.promise;\n      }\n\n      return self.datasource.getResourcesWithAttributesForNode(self.target.nodeId)\n        .then(function (resources) {\n          // Compute a key for more efficient searching\n          _.each(resources, function (resource) {\n            resource.key = resource.label.toLowerCase() + resource.name.toLowerCase();\n          });\n          // Sort the list once\n          self.nodeResources = _.sortBy(resources, function (resource) {\n            return resource.label;\n          });\n          // Filter\n          return filterResources(self.nodeResources, query);\n        });\n    }, function (resource) {\n      // Exclude the node portion of the resource id\n      var re = /node(Source)?\\[.*?]\\.(.*)$/;\n      var match = re.exec(resource.id);\n      self.target.resourceId = match[2];\n      self.targetBlur();\n    });\n  }\n\n  openAttributeSelectionModal() {\n    var self = this;\n    this.showSelectionModal(\"attributes\", {\n      'Name': 'name'\n    }, function (query) {\n      return self.datasource\n        .suggestAttributes(self.target.nodeId, self.target.resourceId, query)\n        .then(function (attributes) {\n          var namedAttributes = [];\n          _.each(attributes, function (attribute) {\n            namedAttributes.push({'name': attribute});\n          });\n\n          return {\n            'count': namedAttributes.length,\n            'totalCount': namedAttributes.length,\n            'rows': namedAttributes\n          };\n        });\n    }, function (attribute) {\n      self.target.attribute = attribute.name;\n      self.targetBlur();\n    });\n  }\n\n  openFilterSelectionModal() {\n    var self = this;\n    this.showSelectionModal(\"filters\", {\n      'Name': 'name',\n      'Description': 'description',\n      'Backend': 'backend'\n    }, function () {\n      return self.datasource\n        .getAvailableFilters()\n        .then(function (results) {\n          return {\n            'count': results.data.length,\n            'totalCount': results.data.length,\n            'rows': results.data\n          };\n        });\n    }, function (filter) {\n      self.target.filter = filter;\n      self.targetBlur();\n    });\n  }\n\n  showSelectionModal(label, columns, search, callback) {\n    var scope = this.$rootScope.$new();\n\n    scope.label = label;\n    scope.columns = columns;\n    scope.search = search;\n\n    scope.result = this.$q.defer();\n    scope.result.promise.then(callback);\n\n    var modal = this.$modal({\n      template: 'public/plugins/opennms-datasource/partials/modal.selection.html',\n      persist: false,\n      show: false,\n      scope: scope,\n      keyboard: false\n    });\n    this.$q.when(modal).then(function (modalEl) { modalEl.modal('show'); });\n  }\n\n  targetBlur() {\n    this.error = this.validateTarget();\n    this.refresh();\n  }\n\n  validateTarget() {\n    if (this.target.type === QueryType.Attribute) {\n      if (!this.target.nodeId) {\n        return \"You must supply a node id.\";\n      } else if (!this.target.resourceId) {\n        return \"You must supply a resource id.\";\n      } else if (!this.target.attribute) {\n        return \"You must supply an attribute.\";\n      }\n    } else if (this.target.type === QueryType.Expression) {\n      if (!this.target.label) {\n        return \"You must supply a label.\";\n      } else if (!this.target.expression) {\n        return \"You must supply an expression.\";\n      }\n    } else if (this.target.type === QueryType.Filter) {\n      if (!this.target.filter) {\n        return \"You must select a filter.\";\n      }\n    } else {\n      return \"Invalid type.\";\n    }\n\n    return undefined;\n  }\n\n  getCollapsedText() {\n    if (this.target.type === QueryType.Attribute) {\n      return \"Attribute: \" + this.target.attribute;\n    } else if (this.target.type === QueryType.Expression) {\n      return \"Expression: \" + this.target.label;\n    } else if (this.target.type === QueryType.Filter) {\n      return \"Filter: \" + this.target.filter.name;\n    } else {\n      return \"<Incomplete>\";\n    }\n  }\n}\n\nOpenNMSQueryCtrl.templateUrl = 'partials/query.editor.html';\n"]}